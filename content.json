{"meta":{"title":"Attack On Mr. Moon","subtitle":null,"description":"Let's run to glory!","author":"🌙","url":"https://lee-hehe.gitee.io","root":"/"},"pages":[{"title":"about","date":"2020-05-20T14:14:36.000Z","updated":"2020-05-27T17:22:54.000Z","comments":false,"path":"about/index.html","permalink":"https://lee-hehe.gitee.io/about/index.html","excerpt":"","text":"[Attack On Mr. Moon] 与&nbsp; Lee-hehe&nbsp; （ 🌙 ） 对话中... bot_ui_ini() document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"book","date":"2020-05-25T07:45:40.000Z","updated":"2020-05-27T17:23:46.000Z","comments":true,"path":"book/index.html","permalink":"https://lee-hehe.gitee.io/book/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"分类","date":"2020-05-21T15:50:09.000Z","updated":"2020-05-27T17:24:04.000Z","comments":false,"path":"categories/index.html","permalink":"https://lee-hehe.gitee.io/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"comment","date":"2020-05-20T15:13:48.000Z","updated":"2020-05-27T17:24:44.000Z","comments":true,"path":"comment/index.html","permalink":"https://lee-hehe.gitee.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》 有什么想说的？ 有什么想问的？ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"其他","date":"2020-05-20T13:47:59.000Z","updated":"2020-05-27T17:25:24.000Z","comments":false,"path":"lab/index.html","permalink":"https://lee-hehe.gitee.io/lab/index.html","excerpt":"","text":"等想到再说！2333~ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-05-27T17:24:26.000Z","comments":false,"path":"client/index.html","permalink":"https://lee-hehe.gitee.io/client/index.html","excerpt":"","text":"直接下载 or 扫码下载： document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"music","date":"2020-05-20T15:14:28.000Z","updated":"2020-05-27T17:26:00.000Z","comments":false,"path":"music/index.html","permalink":"https://lee-hehe.gitee.io/music/index.html","excerpt":"","text":"四月是你的谎言（原声集） 头文字D 电影原声 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"links","date":"2020-05-23T15:11:06.000Z","updated":"2020-05-29T01:09:55.659Z","comments":true,"path":"links/index.html","permalink":"https://lee-hehe.gitee.io/links/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"donate","date":"2020-05-20T15:13:05.000Z","updated":"2020-05-27T17:25:06.000Z","comments":false,"path":"donate/index.html","permalink":"https://lee-hehe.gitee.io/donate/index.html","excerpt":"","text":"喜欢我的博客的话，可以投食支持一下哦！ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"🌙"},{"title":"reading","date":"2020-05-21T16:00:03.000Z","updated":"2020-05-27T17:26:38.000Z","comments":true,"path":"reading/index.html","permalink":"https://lee-hehe.gitee.io/reading/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"https://lee-hehe.gitee.io/rss/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"photo","date":"2020-05-25T07:46:06.000Z","updated":"2020-05-27T17:26:20.000Z","comments":true,"path":"photo/index.html","permalink":"https://lee-hehe.gitee.io/photo/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"video","date":"2020-05-20T15:14:38.000Z","updated":"2020-05-23T18:52:42.000Z","comments":false,"path":"video/index.html","permalink":"https://lee-hehe.gitee.io/video/index.html","excerpt":"","text":"番组计划 希望这里有你喜欢的 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) } document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2020-05-20T14:14:16.000Z","updated":"2020-05-27T17:27:02.000Z","comments":false,"path":"tags/index.html","permalink":"https://lee-hehe.gitee.io/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"},{"title":"theme-sakura","date":"2020-05-19T14:53:25.000Z","updated":"2020-05-27T17:27:20.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://lee-hehe.gitee.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro 从安装教程开始，经过一些修改和配置，一直到可以正常使用，其中的部分资源如下： 白猫的Sakura博文 hojun的b站视频教程 姑的sakuraplus博文 再次感谢各位大佬的教学和指点！ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","author":"Lee-hehe"}],"posts":[{"title":"Typora的基本使用方法","slug":"Typora的基本使用方法","date":"2020-05-29T20:16:37.000Z","updated":"2020-05-29T21:30:36.019Z","comments":true,"path":"2020/05/30/Typora的基本使用方法/","link":"","permalink":"https://lee-hehe.gitee.io/2020/05/30/Typora%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","excerpt":"","text":"Typora官方网站 支持平台： Windows Linux Mac 特点： 完美支持Github的Markdown语法 人性化的书写方式： 表格的书写、挪动 图片、超链接、网页表格复制 目录生成 支持LeTex公式书写 支持Flowchart，Mermaid等流程图绘制 emoji，高亮，备注，上标，下标等书写 生成网页，pdf，图片，甚至word，LeTex的格式 一、Typora简介Typora是一款轻量化，设计风格简约的Markdown文本编辑器，支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别。即时渲染使得你写Markdown就想是写Word文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。编辑器本身支持多个平台，样式美观，功能强大，而且目前还是免费的软件。 Typora删除了预览窗口，以及所有其他不必要的干扰。取而代之的是实时预览。 Markdown的语法因不同的解析器或编辑器而异，Typora使用的是GitHub Flavored Markdown。 二、Markdown简介Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。 Markdown编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 Markdown编写的文档后缀为 .md, .markdown。 三、常用Typora快捷键 标题： Ctrl 1–以此类推 目录：[toc] 加粗： Ctrl B 斜体：Ctrl I 下划线：Ctrl U 高亮：==文本== 删除线：Alt Shift 5 分割线：--- 回车 插入链接： Ctrl K 插入图片： Ctrl Shift I 代码块： Ctrl Shift K 行内代码块：Ctrl Shift (Tab上面的键) 引用：Ctrl Shift Q 选中某段话：Ctrl L 选中某个单词：Ctrl D 选中相同格式的文本：Ctrl E 公式块：Ctrl Shift M 创建表格：Ctrl T 搜索：Ctrl F 搜索关键字并替换： Ctrl H 隐藏/显示侧边栏：Ctrl Shift L 切换原文和语法：Ctrl + / 四、块元素1. 换行符在Markdown中：使用空格 空格 回车可以实现换行；使用&lt;br/&gt;文本&lt;/br&gt;可以空出上一行 在Typora中可直接回车进行换行 2. 标题级别# 一级标题，快捷键`Ctrl 1` ## 二级标题，快捷键`Ctrl 2` ...... ###### 六级标题，快捷键`Ctrl 6` 3. 引用文字&gt; 一级引用，快捷键`Ctrl Shift Q` &gt; &gt; 二级引用 浮世绘，也就是日本的风俗画，版画。它是日本江户时代(1603~1867年间，也叫德川幕府时代兴起的一种独特的民族艺术，是典型的花街柳巷艺术。主要描绘人们日常生活、风景、和演剧。浮世绘常被认为专指彩色印刷的木版画([日语称为锦绘)，但事实上也有手绘的作品。 浮世绘的字面意思为“虚浮的世界绘画”。“浮世”来自佛教用语，本意指人的生死轮回和人世的虚无缥缈。即，此岸或秽土，即忧世或尘世。日本语言中自“浮世”一词出现开始，就一直含有暗指艳事与放荡生活之意。因此浮世绘即描绘世间风情的画作。浮世绘画师以狩野派、土佐派出身者居多，这是因为当时这些画派非常显赫，而被这些画派所驱逐、排斥的画师很多都转向浮世绘发展所致。 4. 无序列表使用*、+、-加空格都可以创建一个无序列表 无序列表 无序列表 按Tab键可以将其转换为多级无序列表 一级 二级 5. 有序列表使用1.、2.、3.加空格创建有序列表 有序列表1 有序列表2 有序列表3 6. 任务列表输入- [ ]即可创建任务框，可手动勾选 - [ ] ，不勾选任务框 - [x] ，勾选任务框 #注意前后加空格 不勾选 勾选 7. 代码块 插入行内代码，即插入一个单词或者一句代码时，使用行内代码这样的形式插入，快捷键Ctrl Shift K 插入多行代码，输入三个Tab键上面那个键（反引号键）然后回车，并在后面选择一个语言名称即可实现语法高亮，例如这里使用python语法 #hello print('hello world!') 8. 数学表达式当你需要在编辑器中插入数学公式时，可以使用两个美元符$$包裹TeX或LaTeX格式的数学公式来实现，根据需要加载Mathjax对数学公式进行渲染。 可以使用两个美元符$$直接包裹，进行数学公式的编辑 也可以按下$$，然后按下回车键，即可进行数学公式的编辑，快捷键Ctrl Shift M $e^{i\\pi}+1=0$ $e^{i\\pi}+1=0$ 预览 $\\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{\\frac{x^3+y^3}{2}}$ $$\\surd, \\sqrt{2}, \\sqrt[n]{}, \\sqrt[3]{\\frac{x^3+y^3}{2}}$$ 预览 另附LaTeX公式手册(全网最全) 9. 插入表格输入 | 表头1 | 表头2 |并回车，即可创建一个2x2的列表，快捷键 Ctrl T，弹出对话框后输入规格即可创建 表格支持拖拽移动、网页复制的表格的超链接也会自动转换 id number 1 01 不管是哪种方式，第一行为表头，第二行为分割表头和主体部分，第三行开始每一行为一个表格行 列与列之间用管道符号| 隔开 还可设置对齐方式（表头与内容之间），如果不使用对齐标记，内容默认左对齐，表头居中对齐 左对齐 ：| 右对齐 |： 中对齐 ：|： 为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用|来标记单元格边界 为了使Markdown更清晰，|和-两侧需要至少有一个空格（最左侧和最右侧的|外就不需要了） 角色 演员 灶门炭治郎 花江夏树 灶门祢豆子 鬼头明里 我妻善逸 下野纮 嘴平伊之助 松冈祯丞 富冈义勇 樱井孝宏 鳞泷左近次 大塚芳忠 锖兔 梶裕贵 真菰 加隈亚衣 不死川玄弥 冈本信彦 产屋敷耀哉 森川智之 产屋敷辉利哉 悠木碧 产屋敷雏衣 井泽诗织 钢铁冢萤 浪川大辅 鎹鸦 山崎巧 佛堂鬼 绿川光 手鬼 子安武人 蝴蝶忍 早见沙织 鬼舞辻无惨 关俊彦 10. 脚注[^1] 再次点击可编辑脚注内容 这个例子的脚注为^1 注意： 该例子脚注标识是1，脚注标识可以为字母数字下划线，但是暂不支持中文 脚注内容可为任意字符，包括中文 11. 分割线输入*** 或者 --- 再按回车即可绘制一条水平线，如下： 12. 目录（TOC）输入[toc]然后回车，即可创建一个“目录” TOC从文档中提取所有标题，其内容将自动更新（Typora支持TOC自动生成目录，博客中不支持） [toc] 五、跨度元素跨度元素即图片，网址，视频等，在Typora中输入后，会立即载入并呈现 1. 链接添加链接快捷键Ctrl K 这是一个带有标题属性的链接 [链接1](https://www.baidu.com/ \"标题属性\")，链接1 这是一个没有标题属性的链接 [链接2](https://www.baidu.com/)，链接2 2. 网址Typora允许用&lt;括号括起来&gt;，把URL作为链接插入，还会自动链接标准网址。 &lt;www.baidu.com&gt; www.baidu.com 3. 图片添加图片快捷键Ctrl Shift I 这是一个带有标题属性的图片，![图片注释]（图片路径，可为网络上的图片，也可为本地图片 \"图片标题属性\"） 这是一个没有标题属性的图片，![图片注释]（图片路径，可为网络上的图片，也可为本地图片） 除了以上两种方式之外，还可以直接将图片拖拽进来，自动生成链接 4. 斜体使用*单个星号*包裹或者_单下划线_包裹可以使字体倾斜，快捷键 Ctrl I 斜体 5. 加粗使用**两个星号**包裹或者__两个下划线__包裹可以使字体加粗，快捷键 Ctrl B 加粗 6. 加粗斜体使用***三个星号***包裹可以使字体加粗倾斜 加粗斜体 7. 代码标记使用`反引号`包裹可以实现代码标记 代码标记 8. 删除线使用~~两个波浪线~~ 包裹可以添加删除线，快捷键 Alt Shift 5 删除线 9. 下划线使用&lt;u&gt;下划线的内容&lt;/u&gt;可以添加下划线，快捷键Ctrl U 下划线 10. 表情符号Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。 :smile: :smile: 也可以在苹果系统所有【笑脸和人物】emoji表情中直接复制粘贴 ❤️ 11. 下标使用~一个波浪线~ 包裹可以添加下标（需在设置中打开该功能），也可以使用&lt;sub&gt;文本&lt;/sub&gt;实现下标 H2O 12. 上标使用^一个尖角符^ 包裹可以添加上标（需在设置中打开该功能），也可以使用&lt;sup&gt;文本&lt;/sup&gt;实现上标 X2 13. 高亮使用==两个等号== 包裹可以使文字高亮（需在设置中打开该功能） ==高亮== 14. 文本居中使用&lt;center&gt;这是要居中的内容&lt;/center&gt;可以使文本居中 这是要居中的文本内容 15. 转义Markdown使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown使用反斜杠转义特殊字符： **文本加粗** \\**正常显示星号** Markdown支持以下这些符号前面加上反斜杠来帮助插入普通的符号： \\ 反斜线 ` 反引号 * 星号 _ 下划线 {} 花括号 [] 方括号 () 小括号 # 井字号 + 加号 - 减号 . 英文句点 ! 感叹号 16. 注释使用&lt;!--此处为注释--&gt;即可添加注释，注释只在预览时可以看到，导出之后无法看到 六、HTMLTypora支持HTML，不在Markdown涵盖范围之内的标签，都可以直接在文档里面用HTML撰写 目前支持的HTML元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如： 使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑 &lt;kbd&gt; &lt;/kbd&gt; -- 白色框框 嵌入内容 支持iframe-based嵌入代码 &lt; iframe height=’265’ scrolling=’no’ title=’Fancy Animated SVG Menu’ src=’http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2' frameborder=’no’ allowtransparency=’true’ allowfullscreen=’true’ style=’width: 100%;’&gt; 视频 &lt; video src=”xxx.mp4” /&gt; 七、主题第一步、在偏好设置的外观下，点击打开主题文件夹，在其中新建.css文件 第二步、在官网点击你想要的主题，Ctrl A全选，Ctrl C复制 第三步、Ctrl V粘贴至刚刚新建的.css文件中，再重启Typora选择你要使用的主题 Typora主题官网 八、文章导出Typora支持直接导出图片、PDF、HTML等多种格式的文档，其他需要第三方库支持 九、总结 建议打开大纲视图Ctrl Shift L 插入表格需要顶格写，否则无法显示 语法无须刻意记忆，右键可查询 部分功能需要在配置文件中开启才能使用 资料来源官网： Typora官方网站 Typora主题官网 视频： 酒石酸菌：Typora 编辑器 —— 书写即为美学 救救-99：Markdown保姆级教程之基础篇（Typora使用教程） 文章： 遇见西门：Typora入门（中文版） Hider1214：Typora入门：全网最全教程 樱花赞：LaTeX公式手册(全网最全) 姚明明：使用Typora添加数学公式 Emoji大全：苹果系统所有【笑脸和人物】emoji表情 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"整理","slug":"整理","permalink":"https://lee-hehe.gitee.io/categories/%E6%95%B4%E7%90%86/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://lee-hehe.gitee.io/tags/%E6%95%99%E7%A8%8B/"}],"author":"Lee-hehe"},{"title":"Telegram纸飞机的注册和使用","slug":"Telegram纸飞机的注册和使用","date":"2020-05-29T02:19:09.000Z","updated":"2020-05-29T21:25:28.829Z","comments":true,"path":"2020/05/29/Telegram纸飞机的注册和使用/","link":"","permalink":"https://lee-hehe.gitee.io/2020/05/29/Telegram%E7%BA%B8%E9%A3%9E%E6%9C%BA%E7%9A%84%E6%B3%A8%E5%86%8C%E5%92%8C%E4%BD%BF%E7%94%A8/","excerpt":"","text":"写在前面： 本文转自茶杯萌Telegram注册及使用教程2020，在此对原作者表示感谢，同时其他小伙伴们注册成功后也可以到作者的原文下面留言投食哦~（ps：你喂食的每一条小鱼干都会成为健康成长中的原作者身上的脂肪(*･ω-q)~ ） 一、下载安装应用程序注意事项： 我们需要下载telegram最新版本 平台支持：telegram支持目前的“几乎”所有平台（其实就是全部），手机端支持安卓、ios、wp；桌面端支持windows、linux、mac os；还有网页版（不推荐） 以下教程只针对大家最常用的手机端的安卓和ios，其余客户端注册教程大同小异 所有用户均可通过telegram官网：telegram.org获得安装程序 1. 安卓用户a. 安卓有能力（手机装有谷歌服务以及play商店，能访问谷歌服务）的用户可以直接在play商店里面下载安装原版客户端。 没有play商店的用户可以通过此链接安装客户端最新版本。同样地以后想要获取telegram的最新更新都可以在这个网址下载。 注：始终建议安卓手机安装全套谷歌服务，具体原因下文会讲 b. 安装第三方客户端 由于telegram的开源特性，造就了无数第三方开发者根据各国用户的使用习惯开发适合自己国家的第三方客户端。这些客户端拥有更多实用功能，不过第三方客户端也有隐私泄露的风险。 下面介绍两款安全、开源、好用的第三方客户端，更加符合用户使用习惯（以下客户端均可且只可通过play商店下载）： 1）、Plus Messenger 这个客户端由国外开发者开发，不过源码更新不及时。 这个客户端的好处是可以分类消息，类似于QQ的分组，可以把群组，频道，联系人分开，还能自带汉化。这样可以在加入过多群组、联系人时能够高效的找到相应对话。 以下是该软件的使用图片 2）、nekogram 这个客户端是由国内开发者开发，目前博主在使用。 最大的优点是紧跟官方源码更新，新功能会及时加入，能够耐心听取用户建议并采纳。 具体特性请见下图 以下是实际使用图片 尤其不要使用币用，蝴蝶IM等套壳客户端，他们会上传你的手机通讯录，电话号码等信息！！！ 2. ios用户ios用户直接在appstore中搜索telegram（注：ios的telegramX版客户端已停更，请即刻切换到telegram） 3. PC端用户（mac同理）请在telegram官网下载PC端最新安装包（需要特定网络环境） 二、 确认网络环境这里会遇到问题，无法进行下一步，因为telegram的服务器在中国大陆地区是无法正常连接的，这里需要用到特定软件连接到国外服务器。但是别急，还有解决方案！ 方法一：使用代理工具请自行寻找可用机场或代理链接，咱的v2ray由于被滥用已停止服务 方法二：使用mtproxy（推荐）这个是telegram内置的专用代理，用于在不能连接到telegram的地方正常连接。带给我们的体验就是像平常用微信一样，不需要任何额外的代理，打开即用，很方便。 这里给出可用telegram的mtproxy 注意：由于国内服务器已备案，此代理现已经切换为海外服务器 注：目前网路上使用脚本搭建mtproxy的全部方法几乎都无效，因为其加密特征已被GfW精准识别，会被立刻封禁ip。有需要自己搭建的请自行食用博主的相关文章。 安卓用户：点击上方connecting的部分，仿照下方图片将链接的相应字符段复制粘贴下去 ios用户：在打开软件时进行下一步操作会直接询问，请点击Use Proxy 特别提示：ios用户请在设置中确认开启telegram的联网权限，否则无法联网 海外直连日本甲骨文 server：mt.imoe.moe port：443 secret：dd28d1eea5fcc3a833f773155f4589a4e3 完整代理链接附上，便于分享给别人 serve–对应的是服务器，port–对应的是端口，secret–对应的是密钥 就像这样子： 添加成功后，点击use proxy开关 提示下ios用户：由于一个很迷的bug，大量用户反馈，即使开启了联网权限也一直是waiting。这里不需要重启手机，只需要划掉后台再次开启即可，这算是个官方bug吧。 三、登陆并注册账号安卓：确认connecting标志变成Your phone ios：能跳转到下一步即表示网络环境良好 这时候输入自己的手机号，注意添加国家代码（中国大陆为＋86），然后进行下一步填写验证码。 特别提示：中国大陆用户的手机号存在被封号的风险，请尽量使用国外手机号 将收到的验证码填写到下方横线处。 这里也许会提示进行语音验证，请不要接听电话，电报会自动完成验证。 四、完善账号信息在下方依次填写姓、名（你也可以只在第一个空处填写完整姓名，下方空格留白） 顺便提醒一下，中文名称可能出现反转问题，所以强烈推荐将姓名全部填入第一栏 这时候就可以顺利进入telegram主界面了 五、进阶使用步骤（必看）1. 汉化telegram原生不支持中文，其实是由于简体中文语言包翻译人员翻译不及时，导致被官方排除在外。我们可以通过应用来自zh_cn团队的中文翻译汉化telegram。 请在主界面中点击右上角放大镜按钮进入全局搜索模式，搜索zh_cn点击汉化频道加入，并按提示点击安装汉化文件。 点击change 这样以后退出回到主页就完成了汉化，尽情使用吧！ 2. 解除+86手机号码私聊限制如果你在尝试向其他用户发送私聊信息时被提示「只能发信给双向联系人」，那么很可能是你的账号被Telegram官方被判定为spam（即垃圾信息）账号了。 最新通知：目前telegram官方已将+86手机号用户拉入黑名单，究其原因是中国币圈用户利用批量注册手机号，发送垃圾信息导致引发telegram垃圾消息泛滥，官方不得已做出了这个残酷的决定。 新注册用户会被直接定义为spam用户，新用户需要联系@SpamBot并按照以下图片操作，半小时左右即可解除限制！！！ 3. 安卓用户接收消息延迟有用户反馈安卓手机经常收不到消息，或者消息过了好几个小时才收到，其实这是由于国内手机大都没有谷歌框架，其中telegram是利用谷歌推送（gcm）收取消息的。因此，建议安卓用户参照网路上的教程装好谷歌框架，这样就能使用gcm愉快的接受消息了。 国产手机大多数都有严格的后台管理机制，会导致gcm接收消息后无法拉起telegram通知通道，同样无法推送。请把谷歌服务和telegram加入后台白名单并允许自启和交叉唤醒（大可不必担心耗电，只有国产流氓软件才会利用这个频繁唤醒）。 4. 如何发现好玩的群在这里推荐一个机器人（群组频道狐）@zh_groups_bot，也是zh_cn团队创建的，目前已经索引了大部分中文圈群组。大家可以通过向机器人发送关键字查找相关群组，或者通过机器人的菜单选择群组分类查找。 5. 保持telegram始终能正常连接服务器你可以加入频道@socks5list里面有免费公益telegram代理，和博主提供的代理形式相同，大家可以点击链接多添加几个，以防失联！！ 请一定要认真读完新手入门文章哦！！！ 有什么问题可以在电报群中向博主提问，也欢迎大家加入博主的群组@onmoe，telegram群地址 进入群组请务必通过机器人验证，点击机器人的按钮。否则会被移除并永久不可加入！ 群组内禁止发布广告和色情内容，否则也会一律封锁！ 被误封请在telegram找@moeecc私信解封 如果你成功注册了telegram，欢迎到赞赏页面给博主投食 如果你想对博主表示感谢，欢迎到原博评论区留言 资料来源原博： 茶杯萌：Telegram注册及使用教程2020 附 telegram简介：Telegram——真正定义即时通讯 茶杯萌：Telegram新手入门指南 茶杯萌：使用国外服务器安装telegram代理 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"整理","slug":"整理","permalink":"https://lee-hehe.gitee.io/categories/%E6%95%B4%E7%90%86/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://lee-hehe.gitee.io/tags/%E6%95%99%E7%A8%8B/"}],"author":"Lee-hehe"},{"title":"从零开始的个人博客搭建","slug":"从零开始的个人博客搭建","date":"2020-05-21T08:04:39.000Z","updated":"2020-05-29T21:28:51.859Z","comments":true,"path":"2020/05/21/从零开始的个人博客搭建/","link":"","permalink":"https://lee-hehe.gitee.io/2020/05/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","excerpt":"Hexo博客框架","text":"一、部署环境1.安装Gita. 进入Git官网，选择自己电脑的型号，点击下载 b. 安装Git，可以参考Git安装和使用的第一部分 c. 安装完成之后需要进行一些Git的配置，前提是你需要有一个GitHub账号，如果没有GitHub账号可以参考GitHub的注册与使用的第一部分进行注册 d. 准备完成后进行Git的配置，首先需要使用SSH密钥连接Github（使用SSH可以记住用户名，并创建属于自己的密码来保证安全操作），可以参考使用SSH密钥连接Github进行配置（包含Windows和Mac的配置方法） 第一步、看看是否存在SSH密钥(keys) ​ 首先，我们需要看看是否看看本机是否存在SSH keys,右击桌面，点击Git Bash Here ​ 输入cd ~/.ssh检查你本机用户home目录下是否存在.ssh目录 ​ 若不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。 第二步、创建一对新的SSH密钥(keys) ​ 输入如下命令： $ssh-keygen -t rsa -C \"your_email@example.com\" #这将按照你提供的邮箱地址，创建一对密钥 Generating public/private rsa key pair. Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter] ​ 直接回车，则将密钥按默认文件进行存储。此时也可以输入特定的文件名，比如/c/Users/you/.ssh/github_rsa ​ 接着，根据提示，你需要输入密码和确认密码（说到这里，如果你很放心，其实可以不用密码，就是到输密码的地方，都直接回车，所以每次push就只管回车就行了。所谓的最安全的密码，就是没有密码 – – 哈哈）。相关提示如下： Enter passphrase (empty for no passphrase): [Type a passphrase] Enter same passphrase again: [Type passphrase again] ​ 输入完成之后，屏幕会显示如下信息： Your identification has been saved in /c/Users/you/.ssh/id_rsa. Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub. The key fingerprint is: 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com 第三步、在GitHub账户中添加你的公钥 ​ 运行如下命令，将公钥的内容复制到系统粘贴板(clipboard)中。(或者用记事本直接打开上面路径下的id_rsa.pub文件，手动复制) clip &lt; ~/.ssh/id_rsa.pub ​ 接着： ​ 1）、登陆GitHub，进入Settings ​ 2）、在左边菜单，点击“SSH and GPG keys” ​ 3）、点击“New SSH key” ​ 4）、粘贴你的密钥到key输入框中，点击“Add SSH key” ​ 5）、再弹出窗口，输入你的GitHub密码，点击确认按钮。 ​ 6）、到此，大功告成了！ 第四步、测试 ​ 为了确认我们可以通过SSH连接GitHub，我们输入ssh -T git@github.com ​ 输入后会要求我们提供验证密码，输入之前创建的密码就ok了 ​ 你可能会看到告警信息，如下： The authenticity of host 'github.com (207.97.227.239)' can't be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? ​ 不用担心，直接输入yes ​ 当出现下面信息，证明Git已经配置成功了 e. 然后设置本地的用户名和邮箱 设置用户名：git config --global user.name '你在GitHub上注册的用户名' 设置用户邮箱：git config --global user.email '注册时候的邮箱' 配置完成之后，使用git config --list命令查看是否配置成功 1.安装Node.js，npma. 进入Node.js官网 下载LTS长期支持版，一直下一步即可。 安装完成会有两个组件：“Node.js”和“npm包管理器” b. 查看node和npm的版本 查看node版本：node -v 查看npm包管理器的版本：npm -v 2.安装镜像源cnpm安装需要借助npm包管理器来安装，但由于国内镜像源太慢，一般在使用之前利用npm来安装cnpm 安装指向淘宝的镜像源cnpm：npm install -g cnpm --registry=https://registry.npm.taobao.org 查看cnpm版本信息：cnpm -v 3.安装hexo博客框架 用cnpm安装hexo博客框架：cnpm install -g hexo-cli 查看hexo版本：hexo -v 此时hexo就已经安装完了 二、使用hexo搭建博客1.使用hexo生成博客 新建一个空的文件夹“blog”并进入该文件夹，右键点击Git Bash Here 输入hexo init初始化博客 此时已经安装完成了，我们来启动博客：hexo s （hexo s不能用的话先输入cnpm install hexo-server） 此时提示在本地localhost的4000端口启动 打开浏览器，访问localhost4000端口：http://localhost:4000 可以看到博客已经搭建好了，而且默认创建了一篇标题为“Hello World”的文章，里面简介了hexo的使用方法 2.新建一篇文章 先断开掉：Ctrl + c，然后创建一篇文章：hexo n \"此处为博客文章名称\" 然后进入文章所在文件夹，可以看到此时已经有了一篇md文件。我们可以直接对它进行编辑（我用的是Typora），编辑完成后保存退出 3.重新生成再预览 先清理一下：hexo clean 再生成一下：hexo g 启动预览博客：hexo s 重新进入4000端口： 此时博客的创建已经完成 三、将个人博客部署到GitHub1.在GitHub上新建一个仓库登录自己的GitHub，然后新建一个仓库 用户部署个人博客的GitHub仓库的命名必须复合特定要求！ 1处必须是这个格式：“你的GitHub名”.github.io，后续在浏览器中输入这个网址就能访问自己的博客 在2处填写一个描述，选择3，点击4，即可创建完成 2.安装Git部署插件 安装Git部署插件：cnpm install --save hexo-deployer-git 3.设置“_config.yml”文件安装完成之后需要设置“blog”文件夹下的“_config.yml”文件，用编译器打开（建议使用Visual Studio Code） 找到“# Deployment”（一般在最下面），进行一些配置 添加下面三行信息（注意冒号后面有一个空格） 1：直接在后面加上“git” 2：先写“repo：”，然后去刚刚创建好仓库的页面复制网址，粘贴过来 3：先写“branch：”， 然后写“master”，保存退出即可 4.部署到远端 接下来部署到远端：hexo d 期间可能需要输入GitHub的账户和密码，注意输入密码的时候不会显示出来 当推送成功之后，可以刷新一下仓库，可以看到会出现很多新的文件 这时我们复制这个网址的后面一段（方框内），以后就可以通过这个网址进入自己的博客了 四、更换博客的主题1.下载目标主题演示主题的网址：https://github.com/litten/hexo-theme-yilia 在blog文件夹下右键点击Git Bash Here 克隆目标主题：git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 下载完成之后我们可以在“blog”文件夹下的“theme”文件夹中，找到“yilia”文件夹 2.修改“_config.yml”文件按照刚才的方法打开“_config.yml”文件，找到“theme” 将方框内的名称改为下载好的主题的名称 然后保存退出 3.重新推送博客 清除hexo clean 生成hexo g 执行hexo s 此时再刷新4000端口，会发现主题已经切换完毕 然后Ctrl + c退出 推到远端：hexo d 刷新自己的网址（每次更改主题后不会立马生效，需要等一会），刷新成功后主题就已更换完毕！ 后续有兴趣的话可以按照Hexo yilia 主题一揽子使用方案对yilia主题进行优化 五、小结先来回顾一下过程： 1.首先是环境准备，安装Git、Node.js、npm 2.然后安装镜像源cnpm，接下来安装hexo 2.初始化一个博客，新建编辑一篇文章，重新生成预览 3.将个人博客部署到GitHub上去 4.最后更换主题等其他 这里建议先把博客搭建起来，然后再考虑主题、内容、页面美观等其他方面的问题，不要着急，一步步来。 安装过程中难免会出现错误，这时不要怕，实在不行的话，大不了可以把“blog”文件夹删掉重新来过，人不能缺少重头再来的勇气！ 这篇文章是通过整理大佬们的资料和视频得出的产物，再次感谢各位大佬的指导教学！ 资料来源：官网： Git官网 Node.js官网 yilia主题地址 视频： CodeSheep：手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo CoolPlayer-函博：一步一步教你如何在Windows10上完成hexo博客搭建和yilia主题使用 文章： 小君君：Git安装和使用 爱吃红豆的猫：GitHub的注册与使用 轩枫：使用SSH密钥连接Github cloudy：Hexo yilia 主题一揽子使用方案 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"整理","slug":"整理","permalink":"https://lee-hehe.gitee.io/categories/%E6%95%B4%E7%90%86/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://lee-hehe.gitee.io/tags/%E6%95%99%E7%A8%8B/"}],"author":"Lee-hehe"},{"title":"礼月博客页（测试用）","slug":"礼月博客页（测试用）","date":"2020-05-21T02:27:41.000Z","updated":"2020-05-30T10:48:56.997Z","comments":true,"path":"2020/05/21/礼月博客页（测试用）/","link":"","permalink":"https://lee-hehe.gitee.io/2020/05/21/%E7%A4%BC%E6%9C%88%E5%8D%9A%E5%AE%A2%E9%A1%B5%EF%BC%88%E6%B5%8B%E8%AF%95%E7%94%A8%EF%BC%89/","excerpt":"","text":"一、添加音乐1. 音乐（自动播放） auto=1 2. 音乐（非自动播放） auto=0 3. 音乐（小） 小模式：调整音乐条长度 width=298 ， 保持height=52 auto=0&amp;height=32 固定不变 4. 音乐（自定大小） 大模式：调整音乐条长度 width=990 ，保持 height=86 auto=0&amp;height=66 固定不变 5. 歌单（自定大小） 二、添加图片1. 图片（添加命名）鬼灭之刃 2. 图片（添加标题属性）光标放在图片上显示信息 3. 图片（未命名无标题） 4. 图片（图片前添加文字）图片前的文字 三、嵌入视频1. 嵌入b站视频 在b站复制“视频下面分享中的嵌入代码”，粘贴到 {% raw %} 这个地方 {% endraw %} 然后在&lt;iframe前面添加如下语句： &lt;div style=\"position: relative;width: 100%;height: 0;padding-bottom: 75%;\"&gt; 在\"true\"后面添加如下语句： style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\" 结尾的&lt;/iframe&gt;后添加&lt;/div&gt; 四、添加链接1. 无标题属性的网站网易云音乐 2. 添加了标题属性的网站光标放在网址上显示信息 哔哩哔哩 3. 直接链接的网址www.baidu.com 五、块元素测试1. 引用使用 &gt; +空格+引文文本 可以添加引用块。 引用的文本 输入多个 &gt; 可以多级引用 多级引用 2. 无序列表使用 * 、 + 、 - 都可以创建一个无序列表。 无序列表1 无序列表2 无序列表3 按Tab可以实现多级无序列表 一级 二级 三级 3. 有序列表使用 1. 、 2. 、 3. 可以创建有序列表。 有序列表1 有序列表2 有序列表3 4. 代码块使用 一个反引号包围 可以实现代码块。 代码块 5. 数学表达式[异常]使用 $$两个美元符包裹 TeX 或 LaTeX 格式的数学公式$$ 可以实现。 常用公式代码$$x^2$$ 6. 插入表格输入 | 表头1 | 表头2 | 并回车，即可创建一个2x2的列表。 id number 1 2 7. 脚注[异常]使用 [^1] 可以对文本添加脚注，然后可以去文档最下方编辑脚注内容。 右上为脚注^1 注意：该例子脚注标识是1，脚注标识可以为字母数字下划线，但是暂不支持中文。脚注内容可为任意字符，包括中文。 8. 分割线输入 *** 或者 --- 再按回车即可绘制一条水平线。 六、文本格式测试1. 字体倾斜使用 *单个星号* 或者 _单下划线_ 可以使字体倾斜。 字体倾斜 2.字体加粗使用 **两个星号** 或者 __两个下划线__ 可以使字体加粗。 字体加粗 3. 加粗斜体使用***加粗斜体***可以使字体加粗并倾斜。 加粗斜体 代码 4. 删除线使用~~删除线~~ 可以在将文本上添加一条删除线。 删除线 5. 下划线使用 &lt;u&gt;下划线的内容&lt;/u&gt; 可在文本下添加下划线。 下划线 6. 表情符号使用 :单个冒号包围的emoji名: 可以显示emoji表情。 :smile: –​&gt;​ :smile: 7. 下标使用 &lt;sub&gt;文本&lt;/sub&gt;实现下标。 H2O 8. 上标使用&lt;sup&gt;文本&lt;/sup&gt;实现上标。 X2 9. 文本居中使用 &lt;center&gt;这是要居中的内容&lt;/center&gt; 可以使文本居中。 要居中的文本 七、插入配置测试1. 插入b站视频hexo-tag-bili 用来在文章或单页面中插入B站外链视频 在Hexo博客的文章或者单页面中使用以下标签语法插入视频 {% bili video_id %} 若视频网址为：https://www.bilibili.com/video/BV1Aa4y147bc?p=1 则在文章中插入的标签语法为： {% bili 1Aa4y147bc %} 若视频网址在第二页：https://www.bilibili.com/video/BV1Aa4y147bc?p=2 则在文章中插入的标签语法为： {% bili 1Aa4y147bc 2 %} 2. 插入图片集hexo-tag-fancybox_img 用来在文章或单页面中图片 在Hexo博客的文章或者单页面中使用以下标签语法插入图片以及描述 {% fb_img src [caption] %} 例如： {% fb_img https://ws3.sinaimg.cn/large/006bYVyvly1fxxewq3plij30yn0jjkjl.jpg sakura %} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"整理","slug":"整理","permalink":"https://lee-hehe.gitee.io/categories/%E6%95%B4%E7%90%86/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://lee-hehe.gitee.io/tags/%E6%B5%8B%E8%AF%95/"},{"name":"书架","slug":"书架","permalink":"https://lee-hehe.gitee.io/tags/%E4%B9%A6%E6%9E%B6/"},{"name":"图集","slug":"图集","permalink":"https://lee-hehe.gitee.io/tags/%E5%9B%BE%E9%9B%86/"}],"author":"Lee-hehe"},{"title":"Hello World","slug":"hello-world","date":"2020-05-20T12:29:16.000Z","updated":"2020-05-27T17:22:20.000Z","comments":true,"path":"2020/05/20/hello-world/","link":"","permalink":"https://lee-hehe.gitee.io/2020/05/20/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[],"author":"Lee-hehe"}],"categories":[{"name":"整理","slug":"整理","permalink":"https://lee-hehe.gitee.io/categories/%E6%95%B4%E7%90%86/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://lee-hehe.gitee.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"测试","slug":"测试","permalink":"https://lee-hehe.gitee.io/tags/%E6%B5%8B%E8%AF%95/"},{"name":"书架","slug":"书架","permalink":"https://lee-hehe.gitee.io/tags/%E4%B9%A6%E6%9E%B6/"},{"name":"图集","slug":"图集","permalink":"https://lee-hehe.gitee.io/tags/%E5%9B%BE%E9%9B%86/"}]}